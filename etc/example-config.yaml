project_name: "run-tasks"

manager:
  encoding: null
  pattern_file_job_command: "{project_name}_job{job_id}_run{job_run_id}"
  storage_period:
    task_run_in_days: 100

  external_task_storage:
    gist:
      url: "https://gist.github.com/gil9red/74fff6072fa2bf19a0a9a0cae8201938"
      file_name: "run-tasks.yaml"

notification:
  enabled: true

  base_url: "http://127.0.0.1:5510"

  email:
    host: "smtp.mail.ru"
    port: 465
    send_to: "ilya.petrash@inbox.ru"
    login: "ilya.petrash@inbox.ru"
    password: "<password>"

    template:
      name: |-
        [{{ config.project_name }}] Задача "{{ run.task.name }}" - запуск #{{ run.seq }} - {{ run.work_status }}!
      text: |-
        [{{ config.project_name }}] Задача "{{ run.task.name }}" - запуск #{{ run.seq }} - {{ run.work_status }}:

        {% for log in run.logs -%}
        {{ log.text }}
        {%- endfor %}
        
        Результат запуска {{ run.get_url() }}.

  telegram:
    add_notify_url: "http://127.0.0.1:10016/add_notify"

    template:
      name: |-
        Задача "{{ run.task.name }}" [{{ config.project_name }}]
      text: |-
        Задача "{{ run.task.name }}" - запуск #{{ run.seq }} - {{ run.work_status }}

web:
  host: "0.0.0.0"
  port: 5510
  debug: false
  secret_key: "<your-secret-key>"
  login: "<login>"
  password: "<password>"

logging:
  version: 1

  formatters:
    default:
      format: "[%(asctime)s] %(filename)s[LINE:%(lineno)d] %(levelname)-8s %(message)s"

  handlers:
    console:
      class: "logging.StreamHandler"
      formatter: "default"
      stream: "ext://sys.stdout"

    task_manager_file: &task_manager_file
      class: "concurrent_log_handler.ConcurrentRotatingFileHandler"
      formatter: "default"
      filename: "task_manager.log"
      encoding: "utf-8"
      backupCount: 5
      maxBytes: 10000000
      delay: true

    web_server_file:
      <<: *task_manager_file
      filename: "web.log"

    external_task_storage_file:
      <<: *task_manager_file
      filename: "external_task_storage_file.log"

  filters:
    filter_remove_date_from_werkzeug_logs:
      (): third_party.filter_remove_date_from_werkzeug_logs.FilterRemoveDateFromWerkzeugLogs

  loggers:
    task_manager:
      handlers: ["console", "task_manager_file"]
      level: "DEBUG"

    werkzeug:
      handlers: ["console", "web_server_file"]
      level: "DEBUG"
      filters: ["filter_remove_date_from_werkzeug_logs"]

    external_task_storage:
      handlers: ["console", "external_task_storage_file"]
      level: "DEBUG"
